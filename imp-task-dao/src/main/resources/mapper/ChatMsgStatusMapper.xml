<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.zxs.imp.task.dao.interf.IChatMsgStatusMapper" >
  
  <sql id="Base_Column_List" >
    id, chat_msg_id, user_id, read_status, push_status, create_at, update_at
  </sql>
  
  <update id="updateByCgIdAndUserId">
  	UPDATE chat_msg_status s LEFT JOIN chat_group_msg m ON s.chat_msg_id = m.id
  	SET s.read_status = 1, s.update_at = now()
  	WHERE m.chat_group_id = #{id} AND s.user_id = #{userId} AND s.read_status = 0
  </update>
  
  <select id="selectUnreadCountByRoom" resultType="org.zxs.imp.task.dao.model.vo.output.ChatGroupSimpleOut">
  	SELECT i.id id, i.type, i.create_at createAt, i.enable_remove enableRemove, i.enable_name_update enableNameUpdate,
  		c.nickname createName, g.lastAt, ifnull(m.cnt,0) unreadNum, count(u1.id) groupNum,
  		CASE WHEN i.type = 1 THEN ui.real_name ELSE i.group_name END groupName
  	FROM chat_group_info i LEFT JOIN chat_group_user c ON i.id = c.chat_group_id and c.role = 0
  		LEFT JOIN chat_group_user u ON i.id = u.chat_group_id
  		LEFT JOIN chat_group_user u1 ON i.id = u1.chat_group_id
  		LEFT JOIN (SELECT m0.chat_group_id, max(s0.create_at) lastAt 
  					FROM chat_group_msg m0 LEFT JOIN chat_msg_status s0 ON m0.id = s0.chat_msg_id
  					GROUP BY m0.chat_group_id) g ON i.id = g.chat_group_id
  		LEFT JOIN (SELECT u0.chat_group_id, u0.user_id, count(s1.id) cnt FROM chat_group_user u0 LEFT JOIN chat_msg_status s1 ON u0.id = s1.chat_msg_id
		  			WHERE s1.read_status = 0
		  			GROUP BY u0.chat_group_id,u0.user_id) m ON i.id = m.chat_group_id and u.user_id = m.user_id
		LEFT JOIN chat_group_user u2 ON i.id = u2.chat_group_id AND i.type = 1 AND u2.user_id != #{userId}
		LEFT JOIN user_info ui ON u2.user_id = ui.id
  	WHERE u.user_id = #{userId} AND g.chat_group_id != 0 AND i.is_deleted = 0
	ORDER BY g.lastAt desc
  </select>
  
</mapper>